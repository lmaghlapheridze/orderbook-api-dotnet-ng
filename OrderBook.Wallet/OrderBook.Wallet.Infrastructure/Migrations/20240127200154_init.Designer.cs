// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OrderBook.Wallets.Infrastructure.Data;

#nullable disable

namespace OrderBook.Wallets.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240127200154_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OrderBook.Wallets.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("OrderBook.Wallets.Domain.Entities.Wallet", b =>
                {
                    b.Property<Guid>("WalletId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CurrencyType")
                        .HasColumnType("integer");

                    b.Property<decimal>("CurrentAmount")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("WalletId");

                    b.HasIndex("UserId");

                    b.ToTable("Wallet");
                });

            modelBuilder.Entity("OrderBook.Wallets.Domain.Entities.WalletOperation", b =>
                {
                    b.Property<Guid>("WalletOperationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("OperationType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("WalletId")
                        .HasColumnType("uuid");

                    b.HasKey("WalletOperationId");

                    b.HasIndex("WalletId");

                    b.ToTable("WalletOperations");
                });

            modelBuilder.Entity("OrderBook.Wallets.Domain.Entities.Wallet", b =>
                {
                    b.HasOne("OrderBook.Wallets.Domain.Entities.User", null)
                        .WithMany("Wallets")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("OrderBook.Wallets.Domain.Entities.WalletOperation", b =>
                {
                    b.HasOne("OrderBook.Wallets.Domain.Entities.Wallet", null)
                        .WithMany("WalletOperations")
                        .HasForeignKey("WalletId");
                });

            modelBuilder.Entity("OrderBook.Wallets.Domain.Entities.User", b =>
                {
                    b.Navigation("Wallets");
                });

            modelBuilder.Entity("OrderBook.Wallets.Domain.Entities.Wallet", b =>
                {
                    b.Navigation("WalletOperations");
                });
#pragma warning restore 612, 618
        }
    }
}
